[  {    "type": "post",    "url": "/authorizations",    "title": "create",    "name": "create",    "description": "<p>Create a new authorization</p>",    "group": "authorization",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "scopes",            "description": "<p>Optional A list of scopes that this authorization is in.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "note",            "description": "<p>Optional A note to remind you what the OAuth token is for.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "note_url",            "description": "<p>Optional A URL to remind you what app the OAuth token is for.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.authorization.create({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "authorization"  },  {    "type": "delete",    "url": "/authorizations/:id",    "title": "delete",    "name": "delete",    "description": "<p>Delete an authorization</p>",    "group": "authorization",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.authorization.delete({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "authorization"  },  {    "type": "get",    "url": "/authorizations/:id",    "title": "get",    "name": "get",    "description": "<p>Get a single authorization</p>",    "group": "authorization",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.authorization.get({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "authorization"  },  {    "type": "get",    "url": "/authorizations",    "title": "getAll",    "name": "getAll",    "description": "<p>List your authorizations</p>",    "group": "authorization",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.authorization.getAll({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "authorization"  },  {    "type": "patch",    "url": "/authorizations/:id",    "title": "update",    "name": "update",    "description": "<p>Update an existing authorization</p>",    "group": "authorization",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "scopes",            "description": "<p>Optional A list of scopes that this authorization is in.</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "add_scopes",            "description": "<p>Optional A list of scopes to add to this authorization.</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "remove_scopes",            "description": "<p>Optional A list of scopes to remove from this authorization.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "note",            "description": "<p>Optional A note to remind you what the OAuth token is for.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "note_url",            "description": "<p>Optional A URL to remind you what app the OAuth token is for.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.authorization.update({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "authorization"  },  {    "type": "get",    "url": "/events",    "title": "get",    "name": "get",    "description": "<p>List public events</p>",    "group": "events",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.events.get({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "events"  },  {    "type": "get",    "url": "/orgs/:org/events",    "title": "getForOrg",    "name": "getForOrg",    "description": "<p>List public events for an organization</p>",    "group": "events",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.events.getForOrg({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "events"  },  {    "type": "get",    "url": "/repos/:user/:repo/events",    "title": "getForRepo",    "name": "getForRepo",    "description": "<p>List repository events</p>",    "group": "events",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.events.getForRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "events"  },  {    "type": "get",    "url": "/repos/:user/:repo/issues/events",    "title": "getForRepoIssues",    "name": "getForRepoIssues",    "description": "<p>List issue events for a repository</p>",    "group": "events",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.events.getForRepoIssues({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "events"  },  {    "type": "get",    "url": "/networks/:user/:repo/events",    "title": "getForRepoNetwork",    "name": "getForRepoNetwork",    "description": "<p>List public events for a network of repositories</p>",    "group": "events",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.events.getForRepoNetwork({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "events"  },  {    "type": "get",    "url": "/users/:user/events",    "title": "getForUser",    "name": "getForUser",    "description": "<p>List events performed by a user</p>",    "group": "events",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.events.getForUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "events"  },  {    "type": "get",    "url": "/users/:user/events/orgs/:org",    "title": "getForUserOrg",    "name": "getForUserOrg",    "description": "<p>List events for a user's organization</p>",    "group": "events",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.events.getForUserOrg({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "events"  },  {    "type": "get",    "url": "/users/:user/events/public",    "title": "getForUserPublic",    "name": "getForUserPublic",    "description": "<p>List public events performed by a user</p>",    "group": "events",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.events.getForUserPublic({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "events"  },  {    "type": "get",    "url": "/users/:user/received_events",    "title": "getReceived",    "name": "getReceived",    "description": "<p>List events that a user has received</p>",    "group": "events",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.events.getReceived({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "events"  },  {    "type": "get",    "url": "/users/:user/received_events/public",    "title": "getReceivedPublic",    "name": "getReceivedPublic",    "description": "<p>List public events that a user has received</p>",    "group": "events",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.events.getReceivedPublic({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "events"  },  {    "type": "get",    "url": "/gists/:id/star",    "title": "checkStar",    "name": "checkStar",    "description": "<p>Check if a gist is starred</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.checkStar({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "post",    "url": "/gists",    "title": "create",    "name": "create",    "description": "<p>Create a gist</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "files",            "description": "<p>Files that make up this gist. The key of which should be a required string filename and the value another required hash with parameters: 'content'</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "public",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Optional</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.create({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "post",    "url": "/gists/:gist_id/comments",    "title": "createComment",    "name": "createComment",    "description": "<p>Create a comment</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "gist_id",            "description": "<p>Id (SHA1 hash) of the gist.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "body",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.createComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "delete",    "url": "/gists/:id",    "title": "delete",    "name": "delete",    "description": "<p>Delete a gist</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.delete({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "delete",    "url": "/gists/:gist_id/comments/:id",    "title": "deleteComment",    "name": "deleteComment",    "description": "<p>Delete a comment</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "gist_id",            "description": "<p>Id (SHA1 hash) of the gist.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.deleteComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "patch",    "url": "/gists/:id",    "title": "edit",    "name": "edit",    "description": "<p>Edit a gist</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "files",            "description": "<p>Files that make up this gist. The key of which should be a required string filename and the value another required hash with parameters: 'content'</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Optional</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.edit({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "patch",    "url": "/gists/:gist_id/comments/:id",    "title": "editComment",    "name": "editComment",    "description": "<p>Edit a comment</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "gist_id",            "description": "<p>Id (SHA1 hash) of the gist.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "body",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.editComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "post",    "url": "/gists/:id/forks",    "title": "fork",    "name": "fork",    "description": "<p>Fork a gist</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.fork({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "get",    "url": "/gists/:id",    "title": "get",    "name": "get",    "description": "<p>Get a single gist</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.get({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "get",    "url": "/gists",    "title": "getAll",    "name": "getAll",    "description": "<p>List the authenticated user's gists or if called anonymously, this will return all public gists</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Optional Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.getAll({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "get",    "url": "/gists/:gist_id/comments/:id",    "title": "getComment",    "name": "getComment",    "description": "<p>Get a single comment</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "gist_id",            "description": "<p>Id (SHA1 hash) of the gist.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.getComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "get",    "url": "/gists/:gist_id/comments",    "title": "getComments",    "name": "getComments",    "description": "<p>List comments on a gist</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "gist_id",            "description": "<p>Id (SHA1 hash) of the gist.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.getComments({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "get",    "url": "/gists/:id/commits",    "title": "getCommits",    "name": "getCommits",    "description": "<p>List gist commits</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.getCommits({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "get",    "url": "/users/:user/gists",    "title": "getForUser",    "name": "getForUser",    "description": "<p>List a user's gists</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Optional Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.getForUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "get",    "url": "/gists/:id/forks",    "title": "getForks",    "name": "getForks",    "description": "<p>List gist forks</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.getForks({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "get",    "url": "/gists/public",    "title": "getPublic",    "name": "getPublic",    "description": "<p>List all public gists</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Optional Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.getPublic({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "get",    "url": "/gists/:id/:sha",    "title": "getRevision",    "name": "getRevision",    "description": "<p>Get a specific revision of a gist</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.getRevision({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "get",    "url": "/gists/starred",    "title": "getStarred",    "name": "getStarred",    "description": "<p>List the authenticated user's starred gists</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Optional Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.getStarred({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "put",    "url": "/gists/:id/star",    "title": "star",    "name": "star",    "description": "<p>Star a gist</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.star({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "delete",    "url": "/gists/:id/star",    "title": "unStar",    "name": "unStar",    "description": "<p>Unstar a gist</p>",    "group": "gists",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gists.unStar({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gists"  },  {    "type": "post",    "url": "/repos/:user/:repo/git/blobs",    "title": "createBlob",    "name": "createBlob",    "description": "<p>Create a Blob</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "encoding",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.createBlob({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "post",    "url": "/repos/:user/:repo/git/commits",    "title": "createCommit",    "name": "createCommit",    "description": "<p>Create a Commit</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>String of the commit message</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "tree",            "description": "<p>String of the SHA of the tree object this commit points to</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "parents",            "description": "<p>Array of the SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided, for a merge commit, an array of more than one should be provided.</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": true,            "field": "author",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": true,            "field": "committer",            "description": "<p>Optional</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.createCommit({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "post",    "url": "/repos/:user/:repo/git/refs",    "title": "createReference",    "name": "createReference",    "description": "<p>Create a Reference</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "ref",            "description": "<p>String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.createReference({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "post",    "url": "/repos/:user/:repo/git/tags",    "title": "createTag",    "name": "createTag",    "description": "<p>Create a Tag Object</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "tag",            "description": "<p>String of the tag</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>String of the tag message</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "object",            "description": "<p>String of the SHA of the git object this is tagging</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>String of the type of the object we’re tagging. Normally this is a commit but it can also be a tree or a blob.</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "tagger",            "description": "<p>JSON object that contains the following keys: <code>name</code> - String of the name of the author of the tag, <code>email</code> - String of the email of the author of the tag, <code>date</code> - Timestamp of when this object was tagged</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.createTag({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "post",    "url": "/repos/:user/:repo/git/trees",    "title": "createTree",    "name": "createTree",    "description": "<p>Create a Tree</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "tree",            "description": "<p>Array of Hash objects (of path, mode, type and sha) specifying a tree structure</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "base_tree",            "description": "<p>Optional String of the SHA1 of the tree you want to update with new data</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.createTree({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "delete",    "url": "/repos/:user/:repo/git/refs/:ref",    "title": "deleteReference",    "name": "deleteReference",    "description": "<p>Delete a Reference</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "ref",            "description": "<p>String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.deleteReference({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "get",    "url": "/repos/:user/:repo/git/blobs/:sha",    "title": "getBlob",    "name": "getBlob",    "description": "<p>Get a Blob</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.getBlob({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "get",    "url": "/repos/:user/:repo/git/commits/:sha",    "title": "getCommit",    "name": "getCommit",    "description": "<p>Get a Commit</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.getCommit({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "get",    "url": "/repos/:user/:repo/git/refs/:ref",    "title": "getReference",    "name": "getReference",    "description": "<p>Get a Reference</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "ref",            "description": "<p>String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.getReference({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "get",    "url": "/repos/:user/:repo/git/refs",    "title": "getReferences",    "name": "getReferences",    "description": "<p>Get all References</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.getReferences({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "get",    "url": "/repos/:user/:repo/git/tags/:sha",    "title": "getTag",    "name": "getTag",    "description": "<p>Get a Tag</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.getTag({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "get",    "url": "/repos/:user/:repo/git/refs/tags",    "title": "getTags",    "name": "getTags",    "description": "<p>Get all tag References</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.getTags({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "get",    "url": "/repos/:user/:repo/git/trees/:sha",    "title": "getTree",    "name": "getTree",    "description": "<p>Get a Tree</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "recursive",            "description": "<p>Optional</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.getTree({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "patch",    "url": "/repos/:user/:repo/git/refs/:ref",    "title": "updateReference",    "name": "updateReference",    "description": "<p>Update a Reference</p>",    "group": "gitdata",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "ref",            "description": "<p>String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "force",            "description": "<p>Optional Boolean indicating whether to force the update or to make sure the update is a fast-forward update. The default is false, so leaving this out or setting it to false will make sure you’re not overwriting work.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.gitdata.updateReference({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "gitdata"  },  {    "type": "post",    "url": "/repos/:user/:repo/issues/:number/labels",    "title": "addLabels",    "name": "addLabels",    "description": "<p>Add labels to an issue</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "body",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.addLabels({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/assignees/:assignee",    "title": "checkAssignee",    "name": "checkAssignee",    "description": "<p>Check assignee</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "assignee",            "description": "<p>Login for the user that this issue should be assigned to.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.checkAssignee({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "post",    "url": "/repos/:user/:repo/issues",    "title": "create",    "name": "create",    "description": "<p>Create an issue</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "body",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "assignee",            "description": "<p>Optional Login for the user that this issue should be assigned to.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "milestone",            "description": "<p>Optional Milestone to associate this issue with.</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": true,            "field": "labels",            "description": "<p>Optional Array of strings - Labels to associate with this issue.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.create({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "post",    "url": "/repos/:user/:repo/issues/:number/comments",    "title": "createComment",    "name": "createComment",    "description": "<p>Create a comment</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "body",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.createComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "post",    "url": "/repos/:user/:repo/labels",    "title": "createLabel",    "name": "createLabel",    "description": "<p>Create a label</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "color",            "description": "<p>6 character hex code, without a leading #.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.createLabel({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "post",    "url": "/repos/:user/:repo/milestones",    "title": "createMilestone",    "name": "createMilestone",    "description": "<p>Create a milestone</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "due_on",            "description": "<p>Optional Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.createMilestone({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "delete",    "url": "/repos/:user/:repo/issues/comments/:id",    "title": "deleteComment",    "name": "deleteComment",    "description": "<p>Delete a comment</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.deleteComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "delete",    "url": "/repos/:user/:repo/labels/:name",    "title": "deleteLabel",    "name": "deleteLabel",    "description": "<p>Delete a label</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.deleteLabel({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "delete",    "url": "/repos/:user/:repo/milestones/:number",    "title": "deleteMilestone",    "name": "deleteMilestone",    "description": "<p>Delete a milestone</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.deleteMilestone({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "patch",    "url": "/repos/:user/:repo/issues/:number",    "title": "edit",    "name": "edit",    "description": "<p>Edit an issue</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "title",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "body",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "assignee",            "description": "<p>Optional Login for the user that this issue should be assigned to.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "milestone",            "description": "<p>Optional Milestone to associate this issue with.</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": true,            "field": "labels",            "description": "<p>Optional Array of strings - Labels to associate with this issue.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "description": "<p>Optional open or closed</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.edit({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "patch",    "url": "/repos/:user/:repo/issues/comments/:id",    "title": "editComment",    "name": "editComment",    "description": "<p>Edit a comment</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "body",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.editComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/issues/:number",    "title": "get",    "name": "get",    "description": "<p>Get a single issue</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.get({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/issues",    "title": "getAll",    "name": "getAll",    "description": "<p>List all issues across all the authenticated user's visible repositories including owned repositories, member repositories, and organization repositories</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "filter",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "description": "<p>Optional open, closed, or all</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "labels",            "description": "<p>Optional String list of comma separated Label names. Example: bug,ui,@high</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "direction",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Optional Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getAll({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/assignees",    "title": "getAssignees",    "name": "getAssignees",    "description": "<p>List assignees</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getAssignees({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/issues/comments/:id",    "title": "getComment",    "name": "getComment",    "description": "<p>Get a single comment</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/issues/:number/comments",    "title": "getComments",    "name": "getComments",    "description": "<p>List comments on an issue</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getComments({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/issues/comments",    "title": "getCommentsForRepo",    "name": "getCommentsForRepo",    "description": "<p>List comments in a repository</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "direction",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Optional Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getCommentsForRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/issues/events/:id",    "title": "getEvent",    "name": "getEvent",    "description": "<p>Get a single event</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getEvent({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/issues/:number/events",    "title": "getEvents",    "name": "getEvents",    "description": "<p>List events for an issue</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getEvents({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/issues/events",    "title": "getEventsForRepo",    "name": "getEventsForRepo",    "description": "<p>List events for a repository</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getEventsForRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/orgs/:org/issues",    "title": "getForOrg",    "name": "getForOrg",    "description": "<p>List all issues for a given organization for the authenticated user</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "filter",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "description": "<p>Optional open, closed, or all</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "labels",            "description": "<p>Optional String list of comma separated Label names. Example: bug,ui,@high</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "direction",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Optional Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getForOrg({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/issues",    "title": "getForRepo",    "name": "getForRepo",    "description": "<p>List issues for a repository</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "milestone",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "description": "<p>Optional open, closed, or all</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "assignee",            "description": "<p>Optional String User login, <code>none</code> for Issues with no assigned User. <code>*</code> for Issues with any assigned User.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "creator",            "description": "<p>Optional The user that created the issue.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "labels",            "description": "<p>Optional String list of comma separated Label names. Example: bug,ui,@high</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "direction",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Optional Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "mentioned",            "description": "<p>Optional String User login.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getForRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/user/issues",    "title": "getForUser",    "name": "getForUser",    "description": "<p>List all issues across owned and member repositories for the authenticated user</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "filter",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "description": "<p>Optional open, closed, or all</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "labels",            "description": "<p>Optional String list of comma separated Label names. Example: bug,ui,@high</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "direction",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Optional Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getForUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/issues/:number/labels",    "title": "getIssueLabels",    "name": "getIssueLabels",    "description": "<p>List labels on an issue</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getIssueLabels({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/labels/:name",    "title": "getLabel",    "name": "getLabel",    "description": "<p>Get a single label</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getLabel({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/labels",    "title": "getLabels",    "name": "getLabels",    "description": "<p>List all labels for this repository</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getLabels({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/milestones/:number",    "title": "getMilestone",    "name": "getMilestone",    "description": "<p>Get a single milestone</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getMilestone({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/milestones/:number/labels",    "title": "getMilestoneLabels",    "name": "getMilestoneLabels",    "description": "<p>Get labels for every issue in a milestone</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getMilestoneLabels({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/repos/:user/:repo/milestones",    "title": "getMilestones",    "name": "getMilestones",    "description": "<p>List milestones for a repository</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "description": "<p>Optional due_date, completeness, default: due_date</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "direction",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.getMilestones({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "delete",    "url": "/repos/:user/:repo/issues/:number/labels",    "title": "removeAllLabels",    "name": "removeAllLabels",    "description": "<p>Remove all labels from an issue</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.removeAllLabels({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "delete",    "url": "/repos/:user/:repo/issues/:number/labels/:name",    "title": "removeLabel",    "name": "removeLabel",    "description": "<p>Remove a label from an issue</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.removeLabel({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "put",    "url": "/repos/:user/:repo/issues/:number/labels",    "title": "replaceAllLabels",    "name": "replaceAllLabels",    "description": "<p>Replace all labels for an issue</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "body",            "description": "<p>Sending an empty array ([]) will remove all Labels from the Issue.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.replaceAllLabels({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "patch",    "url": "/repos/:user/:repo/labels/:name",    "title": "updateLabel",    "name": "updateLabel",    "description": "<p>Update a label</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "color",            "description": "<p>6 character hex code, without a leading #.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.updateLabel({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "patch",    "url": "/repos/:user/:repo/milestones/:number",    "title": "updateMilestone",    "name": "updateMilestone",    "description": "<p>Update a milestone</p>",    "group": "issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "due_on",            "description": "<p>Optional Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.issues.updateMilestone({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "issues"  },  {    "type": "get",    "url": "/emojis",    "title": "getEmojis",    "name": "getEmojis",    "description": "<p>Lists all the emojis available to use on GitHub.</p>",    "group": "misc",    "examples": [      {        "title": "ex:",        "content": "github.misc.getEmojis({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "misc"  },  {    "type": "get",    "url": "/gitignore/templates/:name",    "title": "getGitignoreTemplate",    "name": "getGitignoreTemplate",    "description": "<p>Get a single gitignore template</p>",    "group": "misc",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The name of the .gitignore template to get e.g. 'C'</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.misc.getGitignoreTemplate({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "misc"  },  {    "type": "get",    "url": "/gitignore/templates",    "title": "getGitignoreTemplates",    "name": "getGitignoreTemplates",    "description": "<p>Lists available gitignore templates</p>",    "group": "misc",    "examples": [      {        "title": "ex:",        "content": "github.misc.getGitignoreTemplates({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "misc"  },  {    "type": "get",    "url": "/licenses/:license",    "title": "getLicense",    "name": "getLicense",    "description": "<p>Get an individual license</p>",    "group": "misc",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "license",            "description": "<p>Ex: /licenses/mit</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.misc.getLicense({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "misc"  },  {    "type": "get",    "url": "/licenses",    "title": "getLicenses",    "name": "getLicenses",    "description": "<p>List all licenses</p>",    "group": "misc",    "examples": [      {        "title": "ex:",        "content": "github.misc.getLicenses({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "misc"  },  {    "type": "get",    "url": "/meta",    "title": "getMeta",    "name": "getMeta",    "description": "<p>This endpoint provides information about GitHub.com, the service. Or, if you access this endpoint on your organization's GitHub Enterprise installation, this endpoint provides information about that installation.</p>",    "group": "misc",    "examples": [      {        "title": "ex:",        "content": "github.misc.getMeta({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "misc"  },  {    "type": "get",    "url": "/rate_limit",    "title": "getRateLimit",    "name": "getRateLimit",    "description": "<p>Get your current rate limit status</p>",    "group": "misc",    "examples": [      {        "title": "ex:",        "content": "github.misc.getRateLimit({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "misc"  },  {    "type": "get",    "url": "/repos/:user/:repo/license",    "title": "getRepoLicense",    "name": "getRepoLicense",    "description": "<p>Get the contents of a repository's license</p>",    "group": "misc",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.misc.getRepoLicense({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "misc"  },  {    "type": "post",    "url": "/markdown",    "title": "renderMarkdown",    "name": "renderMarkdown",    "description": "<p>Render an arbitrary Markdown document</p>",    "group": "misc",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "text",            "description": "<p>The Markdown text to render</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "mode",            "description": "<p>Optional The rendering mode, <code>markdown</code> to render a document as plain Markdown, just like README files are rendered. <code>gfm</code> to render a document as user-content, e.g. like user comments or issues are rendered. In GFM mode, hard line breaks are always taken into account, and issue and user mentions are linked accordingly.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "context",            "description": "<p>Optional The repository context, only taken into account when rendering as <code>gfm</code></p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.misc.renderMarkdown({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "misc"  },  {    "type": "post",    "url": "/markdown/raw",    "title": "renderMarkdownRaw",    "name": "renderMarkdownRaw",    "description": "<p>Render a Markdown document in raw mode</p>",    "group": "misc",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "data",            "description": "<p>Raw data to send as the body of the request</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.misc.renderMarkdownRaw({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "misc"  },  {    "type": "put",    "url": "/orgs/:org/memberships/:user",    "title": "addOrganizationMembership",    "name": "addOrganizationMembership",    "description": "<p>Add or update organization membership</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>admin, member</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.addOrganizationMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "put",    "url": "/teams/:id/memberships/:user",    "title": "addTeamMembership",    "name": "addTeamMembership",    "description": "<p>Add team membership</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.addTeamMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "put",    "url": "/teams/:id/repos/:user/:repo",    "title": "addTeamRepo",    "name": "addTeamRepo",    "description": "<p>Add team repository</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.addTeamRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org/members/:user",    "title": "checkMembership",    "name": "checkMembership",    "description": "<p>Check membership</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.checkMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org/public_members/:user",    "title": "checkPublicMembership",    "name": "checkPublicMembership",    "description": "<p>Check public membership</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.checkPublicMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/teams/:id/repos/:user/:repo",    "title": "checkTeamRepo",    "name": "checkTeamRepo",    "description": "<p>Check if a team manages a repository</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.checkTeamRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "delete",    "url": "/orgs/:org/public_members/:user",    "title": "concealMembership",    "name": "concealMembership",    "description": "<p>Conceal a user's membership</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.concealMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "post",    "url": "/orgs/:org/hooks",    "title": "createHook",    "name": "createHook",    "description": "<p>Create a hook</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Must be passed as &quot;web&quot;.</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "config",            "description": "<p>Key/value pairs to provide settings for this webhook</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "events",            "description": "<p>Optional Determines what events the hook is triggered for. Default: [&quot;push&quot;].</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "active",            "description": "<p>Optional Determines whether the hook is actually triggered on pushes.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.createHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "post",    "url": "/orgs/:org/teams",    "title": "createTeam",    "name": "createTeam",    "description": "<p>Create team</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Optional The description of the team.</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "repo_names",            "description": "<p>Optional The repositories to add the team to.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.createTeam({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "delete",    "url": "/orgs/:org/hooks/:id",    "title": "deleteHook",    "name": "deleteHook",    "description": "<p>Delete a hook</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.deleteHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "delete",    "url": "/teams/:id",    "title": "deleteTeam",    "name": "deleteTeam",    "description": "<p>undefined</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.deleteTeam({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "delete",    "url": "/teams/:id/repos/:user/:repo",    "title": "deleteTeamRepo",    "name": "deleteTeamRepo",    "description": "<p>Remove team repository</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.deleteTeamRepo({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "patch",    "url": "/orgs/:org/hooks/:id",    "title": "editHook",    "name": "editHook",    "description": "<p>Edit a hook</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "config",            "description": "<p>Key/value pairs to provide settings for this webhook</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "events",            "description": "<p>Optional Determines what events the hook is triggered for. Default: [&quot;push&quot;].</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "active",            "description": "<p>Optional Determines whether the hook is actually triggered on pushes.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.editHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "patch",    "url": "/teams/:id",    "title": "editTeam",    "name": "editTeam",    "description": "<p>Edit team</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Optional The description of the team.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.editTeam({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org",    "title": "get",    "name": "get",    "description": "<p>Get an organization</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.get({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/organizations",    "title": "getAll",    "name": "getAll",    "description": "<p>List all organizations</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getAll({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/users/:user/orgs",    "title": "getForUser",    "name": "getForUser",    "description": "<p>List user's organizations</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getForUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org/hooks/:id",    "title": "getHook",    "name": "getHook",    "description": "<p>Get single hook</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org/hooks",    "title": "getHooks",    "name": "getHooks",    "description": "<p>List hooks</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getHooks({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org/members",    "title": "getMembers",    "name": "getMembers",    "description": "<p>undefined</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "filter",            "description": "<p>Optional</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getMembers({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org/memberships/:user",    "title": "getOrganizationMembership",    "name": "getOrganizationMembership",    "description": "<p>Get organization membership</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getOrganizationMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/user/memberships/orgs",    "title": "getOrganizationMemberships",    "name": "getOrganizationMemberships",    "description": "<p>List your organization memberships</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "description": "<p>Optional Indicates the state of the memberships to return. Can be either active or pending. If not specified, both active and pending memberships are returned.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getOrganizationMemberships({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org/public_members",    "title": "getPublicMembers",    "name": "getPublicMembers",    "description": "<p>Public members list</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getPublicMembers({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/teams/:id",    "title": "getTeam",    "name": "getTeam",    "description": "<p>Get team</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getTeam({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/teams/:id/members",    "title": "getTeamMembers",    "name": "getTeamMembers",    "description": "<p>undefined</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getTeamMembers({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/teams/:id/memberships/:user",    "title": "getTeamMembership",    "name": "getTeamMembership",    "description": "<p>Get team membership</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getTeamMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/teams/:id/repos",    "title": "getTeamRepos",    "name": "getTeamRepos",    "description": "<p>Get team repos</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getTeamRepos({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "get",    "url": "/orgs/:org/teams",    "title": "getTeams",    "name": "getTeams",    "description": "<p>List teams</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.getTeams({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "post",    "url": "/orgs/:org/hooks/:id/pings",    "title": "pingHook",    "name": "pingHook",    "description": "<p>Ping a hook</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.pingHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "put",    "url": "/orgs/:org/public_members/:user",    "title": "publicizeMembership",    "name": "publicizeMembership",    "description": "<p>Publicize a user's membership</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.publicizeMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "delete",    "url": "/orgs/:org/members/:user",    "title": "removeMember",    "name": "removeMember",    "description": "<p>Remove a member</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.removeMember({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "delete",    "url": "/orgs/:org/memberships/:user",    "title": "removeOrganizationMembership",    "name": "removeOrganizationMembership",    "description": "<p>Remove organization membership</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.removeOrganizationMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "delete",    "url": "/teams/:id/memberships/:user",    "title": "removeTeamMembership",    "name": "removeTeamMembership",    "description": "<p>Remove team membership</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.removeTeamMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "patch",    "url": "/orgs/:org",    "title": "update",    "name": "update",    "description": "<p>Edit an organization</p>",    "group": "orgs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "billing_email",            "description": "<p>Optional Billing email address. This address is not publicized.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "company",            "description": "<p>Optional The company name.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>Optional The publicly visible email address.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "location",            "description": "<p>Optional The location.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>Optional The shorthand name of the company.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Optional The description of the company.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.orgs.update({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "orgs"  },  {    "type": "post",    "url": "/repos/:user/:repo/pulls",    "title": "create",    "name": "create",    "description": "<p>undefined</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "base",            "description": "<p>The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "head",            "description": "<p>The branch (or git ref) where your changes are implemented.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "body",            "description": "<p>Optional</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.create({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "post",    "url": "/repos/:user/:repo/pulls/:number/comments",    "title": "createComment",    "name": "createComment",    "description": "<p>undefined</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "body",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "commit_id",            "description": "<p>Sha of the commit to comment on.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "path",            "description": "<p>Relative path of the file to comment on.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "position",            "description": "<p>Column index in the diff to comment on.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.createComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "post",    "url": "/repos/:user/:repo/pulls/:number/comments",    "title": "createCommentReply",    "name": "createCommentReply",    "description": "<p>undefined</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "body",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "in_reply_to",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.createCommentReply({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "post",    "url": "/repos/:user/:repo/pulls",    "title": "createFromIssue",    "name": "createFromIssue",    "description": "<p>undefined</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "issue",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "base",            "description": "<p>The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "head",            "description": "<p>The branch (or git ref) where your changes are implemented.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.createFromIssue({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "delete",    "url": "/repos/:user/:repo/pulls/comments/:number",    "title": "deleteComment",    "name": "deleteComment",    "description": "<p>undefined</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.deleteComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "get",    "url": "/repos/:user/:repo/pulls/:number",    "title": "get",    "name": "get",    "description": "<p>undefined</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.get({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "get",    "url": "/repos/:user/:repo/pulls",    "title": "getAll",    "name": "getAll",    "description": "<p>undefined</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "description": "<p>Optional open, closed, or all</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "head",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "base",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "description": "<p>Optional Possible values are: <code>created</code>, <code>updated</code>, <code>popularity</code>, <code>long-running</code>, Default: <code>created</code></p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "direction",            "description": "<p>Optional</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.getAll({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "get",    "url": "/repos/:user/:repo/pulls/comments/:number",    "title": "getComment",    "name": "getComment",    "description": "<p>undefined</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.getComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "get",    "url": "/repos/:user/:repo/pulls/:number/comments",    "title": "getComments",    "name": "getComments",    "description": "<p>undefined</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.getComments({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "get",    "url": "/repos/:user/:repo/pulls/:number/commits",    "title": "getCommits",    "name": "getCommits",    "description": "<p>undefined</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.getCommits({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "get",    "url": "/repos/:user/:repo/pulls/:number/files",    "title": "getFiles",    "name": "getFiles",    "description": "<p>undefined</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.getFiles({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "get",    "url": "/repos/:user/:repo/pulls/:number/merge",    "title": "getMerged",    "name": "getMerged",    "description": "<p>undefined</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.getMerged({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "put",    "url": "/repos/:user/:repo/pulls/:number/merge",    "title": "merge",    "name": "merge",    "description": "<p>undefined</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "commit_message",            "description": "<p>Optional The message that will be used for the merge commit</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.merge({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "patch",    "url": "/repos/:user/:repo/pulls/:number",    "title": "update",    "name": "update",    "description": "<p>undefined</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "title",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "body",            "description": "<p>Optional</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.update({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "patch",    "url": "/repos/:user/:repo/pulls/comments/:number",    "title": "updateComment",    "name": "updateComment",    "description": "<p>undefined</p>",    "group": "pullRequests",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "number",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "body",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.pullRequests.updateComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "pullRequests"  },  {    "type": "post",    "url": "/repos/:owner/:repo/releases",    "title": "createRelease",    "name": "createRelease",    "description": "<p>undefined</p>",    "group": "releases",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "owner",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "tag_name",            "description": "<p>String of the tag</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "target_commitish",            "description": "<p>Optional Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually master).</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "body",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "draft",            "description": "<p>Optional true to create a draft (unpublished) release, false to create a published one. Default: false</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "prerelease",            "description": "<p>Optional true to identify the release as a prerelease. false to identify the release as a full release. Default: false</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.releases.createRelease({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "releases"  },  {    "type": "delete",    "url": "/repos/:owner/:repo/releases/assets/:id",    "title": "deleteAsset",    "name": "deleteAsset",    "description": "<p>undefined</p>",    "group": "releases",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "owner",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.releases.deleteAsset({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "releases"  },  {    "type": "delete",    "url": "/repos/:owner/:repo/releases/:id",    "title": "deleteRelease",    "name": "deleteRelease",    "description": "<p>undefined</p>",    "group": "releases",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "owner",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.releases.deleteRelease({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "releases"  },  {    "type": "patch",    "url": "/repos/:owner/:repo/releases/assets/:id",    "title": "editAsset",    "name": "editAsset",    "description": "<p>undefined</p>",    "group": "releases",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "owner",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "label",            "description": "<p>Optional An alternate short description of the asset. Used in place of the filename.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.releases.editAsset({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "releases"  },  {    "type": "patch",    "url": "/repos/:owner/:repo/releases/:id",    "title": "editRelease",    "name": "editRelease",    "description": "<p>undefined</p>",    "group": "releases",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "owner",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "tag_name",            "description": "<p>String of the tag</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "target_commitish",            "description": "<p>Optional Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually master).</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "body",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "draft",            "description": "<p>Optional true to create a draft (unpublished) release, false to create a published one. Default: false</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "prerelease",            "description": "<p>Optional true to identify the release as a prerelease. false to identify the release as a full release. Default: false</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.releases.editRelease({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "releases"  },  {    "type": "get",    "url": "/repos/:owner/:repo/releases/assets/:id",    "title": "getAsset",    "name": "getAsset",    "description": "<p>undefined</p>",    "group": "releases",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "owner",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.releases.getAsset({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "releases"  },  {    "type": "get",    "url": "/repos/:owner/:repo/releases/latest",    "title": "getLatestRelease",    "name": "getLatestRelease",    "description": "<p>undefined</p>",    "group": "releases",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "owner",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.releases.getLatestRelease({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "releases"  },  {    "type": "get",    "url": "/repos/:owner/:repo/releases/:id",    "title": "getRelease",    "name": "getRelease",    "description": "<p>undefined</p>",    "group": "releases",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "owner",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.releases.getRelease({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "releases"  },  {    "type": "get",    "url": "/repos/:owner/:repo/releases/:id/assets",    "title": "listAssets",    "name": "listAssets",    "description": "<p>undefined</p>",    "group": "releases",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "owner",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.releases.listAssets({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "releases"  },  {    "type": "get",    "url": "/repos/:owner/:repo/releases",    "title": "listReleases",    "name": "listReleases",    "description": "<p>undefined</p>",    "group": "releases",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "owner",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.releases.listReleases({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "releases"  },  {    "type": "post",    "url": "/repos/:owner/:repo/releases/:id/assets",    "title": "uploadAsset",    "name": "uploadAsset",    "description": "<p>undefined</p>",    "group": "releases",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "owner",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>the file name of the asset</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.releases.uploadAsset({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "releases"  },  {    "type": "put",    "url": "/repos/:user/:repo/collaborators/:collabuser",    "title": "addCollaborator",    "name": "addCollaborator",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "collabuser",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.addCollaborator({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/compare/:base...:head",    "title": "compareCommits",    "name": "compareCommits",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "base",            "description": "<p>The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "head",            "description": "<p>The branch (or git ref) where your changes are implemented.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.compareCommits({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/user/repos",    "title": "create",    "name": "create",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "homepage",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "private",            "description": "<p>Optional True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "has_issues",            "description": "<p>Optional True to enable issues for this repository, false to disable them. Default is true.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "has_wiki",            "description": "<p>Optional True to enable the wiki for this repository, false to disable it. Default is true.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "has_downloads",            "description": "<p>Optional True to enable downloads for this repository, false to disable them. Default is true.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "auto_init",            "description": "<p>Optional True to create an initial commit with empty README. Default is false</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "gitignore_template",            "description": "<p>Optional Desired language or platform .gitignore template to apply. Ignored if auto_init parameter is not provided.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.create({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/repos/:user/:repo/commits/:sha/comments",    "title": "createCommitComment",    "name": "createCommitComment",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "body",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "commit_id",            "description": "<p>Sha of the commit to comment on.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "path",            "description": "<p>Optional Relative path of the file to comment on.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "position",            "description": "<p>Optional Line index in the diff to comment on.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "line",            "description": "<p>Optional Line number in the file to comment on. Defaults to 1.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.createCommitComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "put",    "url": "/repos/:user/:repo/contents/:path",    "title": "createContent",    "name": "createContent",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "content",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "message",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "path",            "description": "<p>Optional The content path.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "ref",            "description": "<p>Optional The String name of the Commit/Branch/Tag. Defaults to master.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.createContent({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/repos/:user/:repo/deployments",    "title": "createDeployment",    "name": "createDeployment",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "ref",            "description": "<p>The ref to deploy. This can be a branch, tag, or sha.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "task",            "description": "<p>The named task to execute. e.g. deploy or deploy:migrations. Default: deploy</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "auto_merge",            "description": "<p>Optional Optional parameter to merge the default branch into the requested ref if it is behind the default branch. Default: true</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "required_contexts",            "description": "<p>Optional Optional array of status contexts verified against commit status checks. If this parameter is omitted from the parameters then all unique contexts will be verified before a deployment is created. To bypass checking entirely pass an empty array. Defaults to all unique contexts.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "payload",            "description": "<p>Optional Optional JSON payload with extra information about the deployment. Default: ''</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "environment",            "description": "<p>Optional The name of the environment that was deployed to. e.g. staging or production. Default: none.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Optional Optional short description. Default: ''</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.createDeployment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/repos/:user/:repo/deployments/:id/statuses",    "title": "createDeploymentStatus",    "name": "createDeploymentStatus",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "state",            "description": "<p>Optional The state of the status. Can be one of pending, success, error, or failure.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "target_url",            "description": "<p>Optional The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. Default: ''</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Optional A short description of the status. Default: ''</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.createDeploymentStatus({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "put",    "url": "/repos/:user/:repo/contents/:path",    "title": "createFile",    "name": "createFile",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "path",            "description": "<p>The content path.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>The commit message.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>The new file content, Base64 encoded.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "branch",            "description": "<p>Optional The branch name. If not provided, uses the repository’s default branch (usually master).</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": true,            "field": "author",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": true,            "field": "committer",            "description": "<p>Optional</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.createFile({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/orgs/:org/repos",    "title": "createFromOrg",    "name": "createFromOrg",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "homepage",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "private",            "description": "<p>Optional True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "team_id",            "description": "<p>Optional The id of the team that will be granted access to this repository. This is only valid when creating a repo in an organization.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "has_wiki",            "description": "<p>Optional True to enable the wiki for this repository, false to disable it. Default is true.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "has_downloads",            "description": "<p>Optional True to enable downloads for this repository, false to disable them. Default is true.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "auto_init",            "description": "<p>Optional True to create an initial commit with empty README. Default is false</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "gitignore_template",            "description": "<p>Optional Desired language or platform .gitignore template to apply. Ignored if auto_init parameter is not provided.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "has_issues",            "description": "<p>Optional True to enable issues for this repository, false to disable them. Default is true.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.createFromOrg({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/repos/:user/:repo/hooks",    "title": "createHook",    "name": "createHook",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "config",            "description": "<p>A Hash containing key/value pairs to provide settings for this hook. These settings vary between the services and are defined in the github-services repo. Booleans are stored internally as <code>1</code> for true, and <code>0</code> for false. Any JSON true/false values will be converted automatically.</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "events",            "description": "<p>Optional Determines what events the hook is triggered for. Default: <code>['push']</code>.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "active",            "description": "<p>Optional Determines whether the hook is actually triggered on pushes.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.createHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/repos/:user/:repo/keys",    "title": "createKey",    "name": "createKey",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "key",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.createKey({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "delete",    "url": "/repos/:user/:repo",    "title": "delete",    "name": "delete",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.delete({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "delete",    "url": "/repos/:user/:repo/comments/:id",    "title": "deleteCommitComment",    "name": "deleteCommitComment",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.deleteCommitComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "delete",    "url": "/repos/:user/:repo/downloads/:id",    "title": "deleteDownload",    "name": "deleteDownload",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.deleteDownload({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "delete",    "url": "/repos/:user/:repo/contents/:path",    "title": "deleteFile",    "name": "deleteFile",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "path",            "description": "<p>The content path.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>The commit message.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": "<p>The blob SHA of the file being removed.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "branch",            "description": "<p>Optional The branch name. If not provided, uses the repository’s default branch (usually master).</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": true,            "field": "author",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": true,            "field": "committer",            "description": "<p>Optional</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.deleteFile({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "delete",    "url": "/repos/:user/:repo/hooks/:id",    "title": "deleteHook",    "name": "deleteHook",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.deleteHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "delete",    "url": "/repos/:user/:repo/keys/:id",    "title": "deleteKey",    "name": "deleteKey",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.deleteKey({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/repos/:user/:repo/forks",    "title": "fork",    "name": "fork",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "organization",            "description": "<p>Optional Organization login. The repository will be forked into this organization.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.fork({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo",    "title": "get",    "name": "get",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.get({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/user/repos",    "title": "getAll",    "name": "getAll",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "type",            "description": "<p>Optional Possible values: <code>all</code>, <code>owner</code>, <code>public</code>, <code>private</code>, <code>member</code>. Default: <code>all</code>.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "description": "<p>Optional Possible values: <code>created</code>, <code>updated</code>, <code>pushed</code>, <code>full_name</code>. Default: <code>full_name</code>.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "direction",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getAll({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/comments",    "title": "getAllCommitComments",    "name": "getAllCommitComments",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getAllCommitComments({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/:archive_format/:ref",    "title": "getArchiveLink",    "name": "getArchiveLink",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "archive_format",            "description": "<p>Either tarball or zipball</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "ref",            "description": "<p>Optional String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getArchiveLink({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/branches/:branch",    "title": "getBranch",    "name": "getBranch",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "branch",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getBranch({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/branches",    "title": "getBranches",    "name": "getBranches",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getBranches({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/collaborators/:collabuser",    "title": "getCollaborator",    "name": "getCollaborator",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "collabuser",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getCollaborator({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/collaborators",    "title": "getCollaborators",    "name": "getCollaborators",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getCollaborators({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/commits/:sha",    "title": "getCommit",    "name": "getCommit",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getCommit({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/comments/:id",    "title": "getCommitComment",    "name": "getCommitComment",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getCommitComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/commits/:sha/comments",    "title": "getCommitComments",    "name": "getCommitComments",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getCommitComments({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/commits",    "title": "getCommits",    "name": "getCommits",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sha",            "description": "<p>Optional Sha or branch to start listing commits from.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "path",            "description": "<p>Optional Only commits containing this file path will be returned.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "author",            "description": "<p>Optional GitHub login or email address by which to filter by commit author.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "since",            "description": "<p>Optional Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          },          {            "group": "Parameter",            "type": "Date",            "optional": true,            "field": "until",            "description": "<p>Optional Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getCommits({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/contents/:path",    "title": "getContent",    "name": "getContent",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "path",            "description": "<p>Optional The content path.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "ref",            "description": "<p>Optional The String name of the Commit/Branch/Tag. Defaults to master.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getContent({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/contributors",    "title": "getContributors",    "name": "getContributors",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "anon",            "description": "<p>Optional Set to 1 or true to include anonymous contributors in results.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getContributors({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/deployments/:id/statuses",    "title": "getDeploymentStatuses",    "name": "getDeploymentStatuses",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getDeploymentStatuses({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/deployments",    "title": "getDeployments",    "name": "getDeployments",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sha",            "description": "<p>Optional The short or long sha that was recorded at creation time. Default: none.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "ref",            "description": "<p>Optional The name of the ref. This can be a branch, tag, or sha. Default: none.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "task",            "description": "<p>Optional The name of the task for the deployment. e.g. deploy or deploy:migrations. Default: none.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "environment",            "description": "<p>Optional The name of the environment that was deployed to. e.g. staging or production. Default: none.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getDeployments({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/downloads/:id",    "title": "getDownload",    "name": "getDownload",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getDownload({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/downloads",    "title": "getDownloads",    "name": "getDownloads",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getDownloads({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/forks",    "title": "getForks",    "name": "getForks",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "description": "<p>Optional Possible values: <code>newest</code>, <code>oldest</code>, <code>watchers</code>, default: <code>newest</code>.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getForks({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/orgs/:org/repos",    "title": "getFromOrg",    "name": "getFromOrg",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "type",            "description": "<p>Optional Possible values: <code>all</code>, <code>public</code>, <code>private</code>, <code>forks</code>, <code>sources</code>, <code>member</code>. Default: <code>all</code>.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getFromOrg({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/users/:user/repos",    "title": "getFromUser",    "name": "getFromUser",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "type",            "description": "<p>Optional Possible values: <code>all</code>, <code>owner</code>, <code>member</code>. Default: <code>owner</code>.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "description": "<p>Optional Possible values: <code>created</code>, <code>updated</code>, <code>pushed</code>, <code>full_name</code>. Default: <code>full_name</code>.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "direction",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getFromUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/hooks/:id",    "title": "getHook",    "name": "getHook",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/hooks",    "title": "getHooks",    "name": "getHooks",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getHooks({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/keys/:id",    "title": "getKey",    "name": "getKey",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getKey({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/keys",    "title": "getKeys",    "name": "getKeys",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getKeys({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/languages",    "title": "getLanguages",    "name": "getLanguages",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getLanguages({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/readme",    "title": "getReadme",    "name": "getReadme",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "ref",            "description": "<p>Optional The String name of the Commit/Branch/Tag. Defaults to master.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getReadme({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/stargazers",    "title": "getStargazers",    "name": "getStargazers",    "description": "<p>List Stargazers</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getStargazers({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/user/starred",    "title": "getStarred",    "name": "getStarred",    "description": "<p>List repositories being starred by the authenticated user</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getStarred({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/users/:user/starred",    "title": "getStarredFromUser",    "name": "getStarredFromUser",    "description": "<p>List repositories being starred by a user</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getStarredFromUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/user/starred/:user/:repo",    "title": "getStarring",    "name": "getStarring",    "description": "<p>Check if you are starring a repository</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getStarring({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/stats/code_frequency",    "title": "getStatsCodeFrequency",    "name": "getStatsCodeFrequency",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getStatsCodeFrequency({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/stats/commit_activity",    "title": "getStatsCommitActivity",    "name": "getStatsCommitActivity",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getStatsCommitActivity({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/stats/contributors",    "title": "getStatsContributors",    "name": "getStatsContributors",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getStatsContributors({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/stats/participation",    "title": "getStatsParticipation",    "name": "getStatsParticipation",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getStatsParticipation({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/stats/punch_card",    "title": "getStatsPunchCard",    "name": "getStatsPunchCard",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getStatsPunchCard({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/tags",    "title": "getTags",    "name": "getTags",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getTags({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/teams",    "title": "getTeams",    "name": "getTeams",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getTeams({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/user/watched",    "title": "getWatched",    "name": "getWatched",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getWatched({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/users/:user/watched",    "title": "getWatchedFromUser",    "name": "getWatchedFromUser",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getWatchedFromUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repos/:user/:repo/watchers",    "title": "getWatchers",    "name": "getWatchers",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getWatchers({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/user/watched/:user/:repo",    "title": "getWatching",    "name": "getWatching",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.getWatching({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/repos/:user/:repo/merges",    "title": "merge",    "name": "merge",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "base",            "description": "<p>The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "head",            "description": "<p>The branch (or git ref) where your changes are implemented.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "commit_message",            "description": "<p>Optional Commit message to use for the merge commit. If omitted, a default message will be used.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.merge({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/repositories/:id",    "title": "one",    "name": "one",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.one({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "delete",    "url": "/repos/:user/:repo/collaborators/:collabuser",    "title": "removeCollaborator",    "name": "removeCollaborator",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "collabuser",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.removeCollaborator({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "put",    "url": "/user/starred/:user/:repo",    "title": "star",    "name": "star",    "description": "<p>Star a repository</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.star({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "post",    "url": "/repos/:user/:repo/hooks/:id/test",    "title": "testHook",    "name": "testHook",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.testHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "delete",    "url": "/user/starred/:user/:repo",    "title": "unStar",    "name": "unStar",    "description": "<p>Unstar a repository</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.unStar({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "delete",    "url": "/user/watched/:user/:repo",    "title": "unWatch",    "name": "unWatch",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.unWatch({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "patch",    "url": "/repos/:user/:repo",    "title": "update",    "name": "update",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "homepage",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "private",            "description": "<p>Optional True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "has_issues",            "description": "<p>Optional True to enable issues for this repository, false to disable them. Default is true.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "has_wiki",            "description": "<p>Optional True to enable the wiki for this repository, false to disable it. Default is true.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "has_downloads",            "description": "<p>Optional True to enable downloads for this repository, false to disable them. Default is true.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "default_branch",            "description": "<p>Optional Updates the default branch for this repository.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.update({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "patch",    "url": "/repos/:user/:repo/comments/:id",    "title": "updateCommitComment",    "name": "updateCommitComment",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "body",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.updateCommitComment({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "put",    "url": "/repos/:user/:repo/contents/:path",    "title": "updateFile",    "name": "updateFile",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "path",            "description": "<p>The content path.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>The commit message.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>The updated file content, Base64 encoded.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": "<p>The blob SHA of the file being replaced.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "branch",            "description": "<p>Optional The branch name. If not provided, uses the repository’s default branch (usually master).</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": true,            "field": "author",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Json",            "optional": true,            "field": "committer",            "description": "<p>Optional</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.updateFile({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "patch",    "url": "/repos/:user/:repo/hooks/:id",    "title": "updateHook",    "name": "updateHook",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": ""          },          {            "group": "Parameter",            "type": "Json",            "optional": false,            "field": "config",            "description": "<p>A Hash containing key/value pairs to provide settings for this hook. Modifying this will replace the entire config object. These settings vary between the services and are defined in the github-services repo. Booleans are stored internally as <code>1</code> for true, and <code>0</code> for false. Any JSON true/false values will be converted automatically.</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "events",            "description": "<p>Optional Determines what events the hook is triggered for. This replaces the entire array of events. Default: <code>['push']</code>.</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "add_events",            "description": "<p>Optional Determines a list of events to be added to the list of events that the Hook triggers for.</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": true,            "field": "remove_events",            "description": "<p>Optional Determines a list of events to be removed from the list of events that the Hook triggers for.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "active",            "description": "<p>Optional Determines whether the hook is actually triggered on pushes.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.updateHook({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "put",    "url": "/repos/:user/:repo/keys/:id",    "title": "updateKey",    "name": "updateKey",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "key",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.updateKey({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "put",    "url": "/user/watched/:user/:repo",    "title": "watch",    "name": "watch2",    "description": "<p>undefined</p>",    "group": "repos",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.repos.watch({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "repos"  },  {    "type": "get",    "url": "/search/code",    "title": "code",    "name": "code",    "description": "<p>undefined</p>",    "group": "search",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "q",            "description": "<p>Search Term</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "description": "<p>Optional indexed only</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "order",            "description": "<p>Optional asc or desc</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.search.code({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "search"  },  {    "type": "get",    "url": "/legacy/user/email/:email",    "title": "email",    "name": "email",    "description": "<p>undefined</p>",    "group": "search",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email address</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.search.email({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "search"  },  {    "type": "get",    "url": "/search/issues",    "title": "issues",    "name": "issues",    "description": "<p>undefined</p>",    "group": "search",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "q",            "description": "<p>Search Term</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "description": "<p>Optional comments, created, or updated</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "order",            "description": "<p>Optional asc or desc</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.search.issues({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "search"  },  {    "type": "get",    "url": "/search/repositories",    "title": "repos",    "name": "repos",    "description": "<p>undefined</p>",    "group": "search",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "q",            "description": "<p>Search Term</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "description": "<p>Optional stars, forks, or updated</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "order",            "description": "<p>Optional asc or desc</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.search.repos({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "search"  },  {    "type": "get",    "url": "/search/users",    "title": "users",    "name": "users",    "description": "<p>undefined</p>",    "group": "search",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "q",            "description": "<p>Search Term</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "sort",            "description": "<p>Optional followers, repositories, or joined</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "order",            "description": "<p>Optional asc or desc</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.search.users({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "search"  },  {    "type": "post",    "url": "/repos/:user/:repo/statuses/:sha",    "title": "create",    "name": "create",    "description": "<p>undefined</p>",    "group": "statuses",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "state",            "description": "<p>State of the status - can be one of pending, success, error, or failure.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "target_url",            "description": "<p>Optional Target url to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the ‘source’ of the Status.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "description",            "description": "<p>Optional Short description of the status.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "context",            "description": "<p>Optional A string label to differentiate this status from the status of other systems.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.statuses.create({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "statuses"  },  {    "type": "get",    "url": "/repos/:user/:repo/commits/:sha/statuses",    "title": "get",    "name": "get",    "description": "<p>undefined</p>",    "group": "statuses",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.statuses.get({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "statuses"  },  {    "type": "get",    "url": "/repos/:user/:repo/commits/:sha/status",    "title": "getCombined",    "name": "getCombined",    "description": "<p>undefined</p>",    "group": "statuses",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "repo",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "sha",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.statuses.getCombined({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "statuses"  },  {    "type": "post",    "url": "/user/emails",    "title": "addEmails",    "name": "addEmails",    "description": "<p>undefined</p>",    "group": "user",    "examples": [      {        "title": "ex:",        "content": "github.user.addEmails({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "post",    "url": "/user/keys",    "title": "createKey",    "name": "createKey",    "description": "<p>undefined</p>",    "group": "user",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "key",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.user.createKey({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "delete",    "url": "/user/emails",    "title": "deleteEmails",    "name": "deleteEmails",    "description": "<p>undefined</p>",    "group": "user",    "examples": [      {        "title": "ex:",        "content": "github.user.deleteEmails({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "delete",    "url": "/user/keys/:id",    "title": "deleteKey",    "name": "deleteKey",    "description": "<p>undefined</p>",    "group": "user",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.user.deleteKey({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "patch",    "url": "/user/memberships/orgs/:org",    "title": "editOrganizationMembership",    "name": "editOrganizationMembership",    "description": "<p>Edit your organization membership</p>",    "group": "user",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "state",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.user.editOrganizationMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "put",    "url": "/user/following/:user",    "title": "followUser",    "name": "followUser",    "description": "<p>undefined</p>",    "group": "user",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.user.followUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "get",    "url": "/user",    "title": "get",    "name": "get",    "description": "<p>undefined</p>",    "group": "user",    "examples": [      {        "title": "ex:",        "content": "github.user.get({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "get",    "url": "/users",    "title": "getAll",    "name": "getAll",    "description": "<p>undefined</p>",    "group": "user",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "since",            "description": "<p>Optional The integer ID of the last User that you’ve seen.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.user.getAll({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "get",    "url": "/user/emails",    "title": "getEmails",    "name": "getEmails",    "description": "<p>undefined</p>",    "group": "user",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.user.getEmails({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "get",    "url": "/user/following/:user",    "title": "getFollowUser",    "name": "getFollowUser",    "description": "<p>undefined</p>",    "group": "user",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.user.getFollowUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "get",    "url": "/users/:user/followers",    "title": "getFollowers",    "name": "getFollowers",    "description": "<p>undefined</p>",    "group": "user",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.user.getFollowers({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "get",    "url": "/user/following",    "title": "getFollowing",    "name": "getFollowing",    "description": "<p>undefined</p>",    "group": "user",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.user.getFollowing({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "get",    "url": "/users/:user/following",    "title": "getFollowingFromUser",    "name": "getFollowingFromUser",    "description": "<p>undefined</p>",    "group": "user",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.user.getFollowingFromUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "get",    "url": "/users/:user",    "title": "getFrom",    "name": "getFrom",    "description": "<p>undefined</p>",    "group": "user",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.user.getFrom({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "get",    "url": "/user/keys/:id",    "title": "getKey",    "name": "getKey",    "description": "<p>undefined</p>",    "group": "user",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.user.getKey({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "get",    "url": "/user/keys",    "title": "getKeys",    "name": "getKeys",    "description": "<p>undefined</p>",    "group": "user",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.user.getKeys({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "get",    "url": "/users/:user/keys",    "title": "getKeysFromUser",    "name": "getKeysFromUser",    "description": "<p>undefined</p>",    "group": "user",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.user.getKeysFromUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "get",    "url": "/user/memberships/orgs/:org",    "title": "getOrganizationMembership",    "name": "getOrganizationMembership",    "description": "<p>Get your organization membership</p>",    "group": "user",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "org",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.user.getOrganizationMembership({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "get",    "url": "/user/orgs",    "title": "getOrgs",    "name": "getOrgs",    "description": "<p>undefined</p>",    "group": "user",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.user.getOrgs({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "get",    "url": "/user/teams",    "title": "getTeams",    "name": "getTeams",    "description": "<p>undefined</p>",    "group": "user",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "page",            "description": "<p>Optional Page number of the results to fetch.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "per_page",            "description": "<p>Optional A custom page size up to 100. Default is 30.</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.user.getTeams({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "delete",    "url": "/user/following/:user",    "title": "unFollowUser",    "name": "unFollowUser",    "description": "<p>undefined</p>",    "group": "user",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.user.unFollowUser({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "patch",    "url": "/user",    "title": "update",    "name": "update",    "description": "<p>undefined</p>",    "group": "user",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "blog",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "company",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "location",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "hireable",            "description": "<p>Optional</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "bio",            "description": "<p>Optional</p>"          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.user.update({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  },  {    "type": "patch",    "url": "/user/keys/:id",    "title": "updateKey",    "name": "updateKey",    "description": "<p>undefined</p>",    "group": "user",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "key",            "description": ""          }        ]      }    },    "examples": [      {        "title": "ex:",        "content": "github.user.updateKey({ ... });",        "type": "js"      }    ],    "version": "0.0.0",    "filename": "doc/apidoc.js",    "groupTitle": "user"  }]
